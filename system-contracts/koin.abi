{
    "methods": {
        "name": {
            "argument": "koinos.contracts.token.name_arguments",
            "return": "koinos.contracts.token.name_result",
            "description": "Returns the token's name",
            "entry_point": "0x82a3537f",
            "read-only": true
        },
        "symbol": {
            "argument": "koinos.contracts.token.symbol_arguments",
            "return": "koinos.contracts.token.symbol_result",
            "description": "Returns the token's symbol",
            "entry_point": "0xb76a7ca1",
            "read-only": true
        },
        "decimals": {
            "argument": "koinos.contracts.token.decimals_arguments",
            "return": "koinos.contracts.token.decimals_result",
            "description": "Return the token's decimal precision",
            "entry_point": "0xee80fd2f",
            "read-only": true
        },
        "total_supply": {
            "argument": "koinos.contracts.token.total_supply_arguments",
            "return": "koinos.contracts.token.total_supply_result",
            "description": "Return the token's total supply",
            "entry_point": "0xb0da3934",
            "read-only": true
        },
        "balance_of": {
            "argument": "koinos.contracts.token.balance_of_arguments",
            "return": "koinos.contracts.token.balance_of_result",
            "description": "Checks the balance at an address",
            "entry_point": "0x5c721497",
            "read-only": true
        },
        "transfer": {
            "argument": "koinos.contracts.token.transfer_arguments",
            "return": "koinos.contracts.token.transfer_result",
            "description": "Transfers the token",
            "entry_point": "0x27f576ca",
            "read-only": false
        },
        "mint": {
            "argument": "koinos.contracts.token.mint_arguments",
            "return": "koinos.contracts.token.mint_result",
            "description": "Mints the token",
            "entry_point": "0xdc6f17bb",
            "read-only": false
        }
    },
    "types": "CrUCChRrb2lub3Mvb3B0aW9ucy5wcm90bxIGa29pbm9zGiBnb29nbGUvcHJvdG9idWYvZGVzY3JpcHRvci5wcm90byptCgpieXRlc190eXBlEgoKBkJBU0U2NBAAEgoKBkJBU0U1OBABEgcKA0hFWBACEgwKCEJMT0NLX0lEEAMSEgoOVFJBTlNBQ1RJT05fSUQQBBIPCgtDT05UUkFDVF9JRBAFEgsKB0FERFJFU1MQBjpMCgVidHlwZRIdLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE9wdGlvbnMY0IYDIAEoDjISLmtvaW5vcy5ieXRlc190eXBlUgVidHlwZYgBAUIuWixnaXRodWIuY29tL2tvaW5vcy9rb2lub3MtcHJvdG8tZ29sYW5nL2tvaW5vc2IGcHJvdG8zCqoICiJrb2lub3MvY29udHJhY3RzL3Rva2VuL3Rva2VuLnByb3RvEhZrb2lub3MuY29udHJhY3RzLnRva2VuGhRrb2lub3Mvb3B0aW9ucy5wcm90byIQCg5uYW1lX2FyZ3VtZW50cyIjCgtuYW1lX3Jlc3VsdBIUCgV2YWx1ZRgBIAEoCVIFdmFsdWUiEgoQc3ltYm9sX2FyZ3VtZW50cyIlCg1zeW1ib2xfcmVzdWx0EhQKBXZhbHVlGAEgASgJUgV2YWx1ZSIUChJkZWNpbWFsc19hcmd1bWVudHMiJwoPZGVjaW1hbHNfcmVzdWx0EhQKBXZhbHVlGAEgASgNUgV2YWx1ZSIYChZ0b3RhbF9zdXBwbHlfYXJndW1lbnRzIi8KE3RvdGFsX3N1cHBseV9yZXN1bHQSGAoFdmFsdWUYASABKARCAjABUgV2YWx1ZSIyChRiYWxhbmNlX29mX2FyZ3VtZW50cxIaCgVvd25lchgBIAEoDEIEgLUYBlIFb3duZXIiLQoRYmFsYW5jZV9vZl9yZXN1bHQSGAoFdmFsdWUYASABKARCAjABUgV2YWx1ZSJeChJ0cmFuc2Zlcl9hcmd1bWVudHMSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIUCgJ0bxgCIAEoDEIEgLUYBlICdG8SGAoFdmFsdWUYAyABKARCAjABUgV2YWx1ZSInCg90cmFuc2Zlcl9yZXN1bHQSFAoFdmFsdWUYASABKAhSBXZhbHVlIkAKDm1pbnRfYXJndW1lbnRzEhQKAnRvGAEgASgMQgSAtRgGUgJ0bxIYCgV2YWx1ZRgCIAEoBEICMAFSBXZhbHVlIiMKC21pbnRfcmVzdWx0EhQKBXZhbHVlGAEgASgIUgV2YWx1ZSIqCg5iYWxhbmNlX29iamVjdBIYCgV2YWx1ZRgBIAEoBEICMAFSBXZhbHVlInkKE21hbmFfYmFsYW5jZV9vYmplY3QSHAoHYmFsYW5jZRgBIAEoBEICMAFSB2JhbGFuY2USFgoEbWFuYRgCIAEoBEICMAFSBG1hbmESLAoQbGFzdF9tYW5hX3VwZGF0ZRgDIAEoBEICMAFSDmxhc3RNYW5hVXBkYXRlIjwKCm1pbnRfZXZlbnQSFAoCdG8YASABKAxCBIC1GAZSAnRvEhgKBXZhbHVlGAIgASgEQgIwAVIFdmFsdWUiWgoOdHJhbnNmZXJfZXZlbnQSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIUCgJ0bxgCIAEoDEIEgLUYBlICdG8SGAoFdmFsdWUYAyABKARCAjABUgV2YWx1ZUI+WjxnaXRodWIuY29tL2tvaW5vcy9rb2lub3MtcHJvdG8tZ29sYW5nL2tvaW5vcy9jb250cmFjdHMvdG9rZW5iBnByb3RvMw=="
}